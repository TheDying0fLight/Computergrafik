Learn Python in Less than 10 Minutes for Beginners (Fast & Easy)

0:00
what is up guys in this video i'm going
0:02
to be showing you how you can get
0:03
started with python
0:04
in less than 10 minutes and i'm going to
0:06
be using python 3.8 for this
0:08
along with pycharm as my code editor
0:12
you can just search these on google and
0:14
they will pop up immediately
0:15
they are free and open source so
0:18
definitely do check those out
0:19
otherwise let's get started immediately
0:21
with the first thing you should know in
0:23
python and that is how to assign values
Variables
0:25
to
0:25
variables so to create a variable all
0:28
you have to do is decide on a name such
0:29
as
0:30
item and then you can just assign it a
0:32
value
0:33
this is a string and a string is just
0:35
any form of text
0:37
for the program to read and you also
0:39
need to keep in mind
0:40
that python is a case sensitive language
0:43
which means item with a small
0:45
i and item with a big i are going to
0:47
mean
0:48
absolutely different things and also a
0:51
naming convention
0:52
in python is to add an underscore every
0:55
time you have more than one word
0:56
so if we say item name you want to add
0:59
this underscore over here
1:01
and we can just say orange so now we
1:03
have a few strings assigned
1:05
to three different variables let's go
1:07
ahead and print
1:08
first the difference between item and
1:10
item just to show you
1:12
that there is a difference so we'll go
1:14
ahead and click on run
1:16
and you'll notice it will say banana and
1:18
apple
1:19
now let's go ahead and print another
1:21
string which this time is going to be
1:23
hello
1:23
and we're going to add a plus and
1:26
the item name so as you can see we can
1:28
actually combine text and when we print
Data Types
1:30
that it's going to say hello orange
1:33
next we have data types so the first one
1:35
is the integer which is just any number
1:38
and you're going to notice it being
1:39
written
1:40
in blue then we have strings which as i
1:42
showed you earlier is just any text
1:44
inside quotation marks then we have
1:47
booleans which is just a simple
1:49
true or false so as you can see we can
1:51
just type in false here
1:52
or true here and that's all that it is
1:55
it just says true or false
1:57
and the final one you should know for
1:58
getting started
2:00
is list which all you have to do is
2:02
create a pair of angle brackets
2:04
and insert the values you want inside
2:06
here and it can be a mixture between
2:08
numbers booleans and so on but for this
2:10
example we'll just keep it simple
2:12
and write a few strings then if we go
2:15
ahead and print these
2:16
you're going to notice that we will get
2:17
2021 text
2:19
false and the list but let's move on to
2:22
an example that we want to print these
2:24
values
2:24
combined so let's say name is mario the
2:27
string
2:28
number is going to equal 22. so you're
2:31
going to notice 2021
2:33
is a blue number and this one is green
2:35
because this is considered text while
2:36
this is considered
2:38
an integer so what we need to do is
2:40
actually convert them into the correct
2:42
types before combining them
2:43
so to do that we can just go ahead and
2:45
type in print name plus
2:47
the string value of integer so it's
2:50
going to convert the integer to a string
2:52
so that we can combine these two texts
2:53
together if we remove that
2:55
and only write integer you're going to
2:57
notice we are going to get an exception
2:59
that says we cannot do that
3:00
and the same thing goes for the string
3:02
number pretend we want to add the value
3:04
of 10 to the string number the editor
3:06
will be nice enough to tell you you
3:07
shouldn't do that
3:09
and we should just put some parentheses
3:11
there and type in
3:12
in ahead of that so we can convert it to
3:14
an integer and add it easily
3:17
next let's move on to math so we will
3:19
create two variables one will be
3:21
10 and one will be five and to do math
3:23
in python
3:24
it's very self-explanatory as you can
3:26
see to do addition you just need to add
3:28
a plus symbol
3:29
for the difference you just add a minus
3:31
symbol to multiply you add an
3:33
asterisk to divide you add a slash and
3:36
if you want the exponential power
3:38
just add two asterisks and you'll notice
3:40
that if we print all of these
3:42
you're going to get a very quick
3:43
calculator so of course 10 plus 5 is 15
3:46
a minus b is going to be 5 and so on you
3:49
will get the values that correspond
Logic Statements
3:51
to those operators okay next let's go
3:54
ahead
3:54
and create a logic statement so we're
3:57
going to use
3:58
these two values so is happy is false
4:01
age is 28.
4:03
let's pretend we want something to
4:04
happen if the age is more than 21
4:07
we'll say print you are old and if they
4:11
are not old
4:12
we can also type in l if the age
4:15
is equal to 18 we will tell them you are
4:18
getting old
4:19
and if it's neither of those we can go
4:21
ahead and say
4:22
you are still young and the same thing
4:25
goes with the
4:25
is happy statement so we type in if the
4:28
person is happy
4:29
we can write you are happy else they are
4:33
probably not happy
4:34
so we will just write you are not happy
4:37
and when we play it it's going to say
4:39
they are not happy because is happy
4:41
is false and if we set this to true it's
4:44
going to change to
4:45
you are happy so the if statement just
4:48
takes into account whether a statement
4:49
is true or
For Loop
4:50
false and depending on that it's going
4:52
to give the outcome of the values
4:54
and the if else statement is going to
4:56
probably be your most
4:58
used logic next let's move on to the for
5:01
loop
5:01
so for i in range of three which means
5:05
it's going to
5:06
loop over three values we want to print
5:09
hello and we can add a comma here
5:11
and the value of i so if we print this
5:14
you're going to notice
5:15
it's going to say hello0 hello1 hello2
5:18
because
5:18
in programming the index always starts
5:21
at 0.
5:22
so if you actually want that to start at
5:23
one you're going to have to manually add
5:25
one
5:26
to i so now you get hello one hello to
5:28
hello three
5:29
and also just so you know what range is
5:32
we can go down here
5:33
and we can go ahead and type in print
5:35
range
5:36
of three so you're going to notice it's
5:39
going to create a range object which is
5:41
going to have the values from 0
5:42
to 3 so this can iterate three times
5:45
over that but you should also know
5:47
that this works for lists so we can
5:49
create a name list
While Loop
5:51
and we can type in for name in name list
5:54
we can print the name next we have a
5:57
while loop so we're just gonna type in i
5:59
equals zero and while i is less than
6:02
five
6:03
we're going to increment the value of i
6:06
by one
6:06
each time it goes in this loop and
6:08
finally we want to print the value of i
6:10
so what you should get
6:12
are five values printed out just like
6:14
this because as soon as this statement
6:16
becomes false
6:17
it's going to exit out of this loop and
6:20
just terminate the program but a reason
6:22
to use this is because you can create an
6:24
infinite loop such as while true and
6:26
that's never going to be false and
6:27
inside here we're going to type in
6:29
user input and that's going to equal an
6:32
input
6:32
that says enter something and if
6:36
the user input is equal to the string of
6:39
zero then we're going to print we are
6:41
done here
6:42
and we are also going to break
6:45
and what break does is just cancel the
6:48
loop which means
6:49
if we type in zero this loop is no
6:51
longer going to be valid
6:52
and it's going to exit out of the
6:53
program otherwise it's going to loop
6:56
forever and if we actually play the
6:57
program you're going to notice that
6:59
finally we can add some inputs so we can
Functions
7:01
type in 10
7:02
we can do two we can type in whatever
7:04
that is
7:05
but as soon as we type in zero it's
7:07
going to exit the loop because
7:09
it will reach this break statement and
7:12
the program will finish
7:13
moving on to functions to create a
7:16
function
7:16
all you have to do is use the def
7:18
keyword and just name the function
7:20
however you like of course i'm going to
7:21
use
7:22
the underscore naming convention and
7:24
this function is only going to be used
7:26
to say hello to the user so
7:28
here we can go ahead and type in print
7:30
hey there and we're going to insert the
7:32
name so you might be wondering
7:33
what are functions and what do we use
7:35
functions for well functions are just
7:36
used to
7:38
reuse your code in many different
7:40
instances because
7:41
the main point of programming is to
7:44
reuse your code
7:45
as much as possible you want to maximize
7:47
how often you can
7:48
reuse the same line of code without
7:50
having to rewrite it
7:52
so for example now we created a function
7:54
that says hello we can type in mario
7:56
and we can also use it again and we can
7:58
type in luigi and when we run the
Pass
8:00
program it will say hey there mario
8:02
and hey there luigi instead of writing
8:04
this statement
8:05
twice we were able to just use one
8:07
function to do it multiple times
8:09
and one thing we should cover also on
8:11
functions is pretend you have
8:13
a lot of functions you need to create
8:14
such as get
8:16
internet and run game something
8:19
such as that and you don't really have
8:21
the logic for it yet so you're going to
8:23
notice that these
8:24
are empty if you run the program you're
8:26
going to get
8:27
an error but python has created this
8:30
keyword that is called pass
8:32
which essentially just says there's
8:34
nothing in here we accept that
8:36
and your program is still going to be
8:38
able to run regardless of having no
8:40
content inside the function now when we
8:42
tap on run you're going to notice there
8:44
are going to be
8:44
no errors because the program's going to
8:46
understand that we provided the keyword
8:48
pass
8:49
which just tells it that there's nothing
8:51
there and it accepts it but this is very
8:53
good for creating the blueprints later
8:55
in case you need to write everything
8:56
your program should do but don't really
8:58
know how to do that yet
Try Accept
9:00
just insert the word pass and it will
9:01
save you a lot of trouble
9:03
and finally we're going to go over how
9:05
we can use the try
9:06
and accept block so for here we're going
9:09
to create an
9:09
input and it's going to say please
9:12
provide
9:14
a number so now we're going to go ahead
9:15
and type in try
9:17
and we're going to try to print the
9:18
value plus the
9:20
integer of the number that we get from
9:23
the user
9:24
and if that doesn't work we're going to
9:26
print that
9:28
that is not a valid number
9:31
so the way it works is it tries to
9:33
execute the code that's inside here
9:35
and if anything goes wrong if an
9:36
exception occurs it's going to go
9:39
to the accept block and it's going to
9:41
execute whatever is inside that
9:43
of course if you write something that
9:45
throws an exception inside here
9:46
you need to try with another try and
9:48
accept block but if we go ahead and run
9:50
the program now we can write something
9:51
like 10
9:52
and it's going to add 10 to the value
9:55
but of course what if we write something
9:56
such as mario
9:58
try adding mario to 10 and the program
10:00
is not going to be happy
10:01
because you cannot convert mario to an
10:04
integer and then add it to 10. so it's
10:06
going to say
10:06
you shouldn't do that but don't worry
10:08
because we have the exception covered
10:11
and our program will say that is not a
10:13
valid number and not throw an exception
10:15
but anyway
10:16
i really hope that helped you to get
10:18
started with python of course there's a
10:19
lot more to cover
10:21
this was just meant as a very quick
10:23
guide for helping you to get started
10:24
and with that being said have a
10:26
wonderful day and i'll see you guys in
10:28
the next video